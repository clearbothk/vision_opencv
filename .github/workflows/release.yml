name: Release DEB package
on:
  release:
    types: [published]

jobs:
  build-debian:
    runs-on: ARM64
    container: asia-docker.pkg.dev/clearbot-360312/clearbot-public/ros-foxy-cuda:latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup apt repo
        env:
          APTSERVER_USER: ${{ secrets.APTSERVER_USER }}
          APTSERVER_PASSWORD: ${{ secrets.APTSERVER_PASSWORD }}
        run: |
          sudo apt update
          sudo apt install -y wget software-properties-common curl
          wget -qO - https://aptserver.clearbot.dev/pubkey | sudo apt-key add -
          echo "machine https://aptserver.clearbot.dev\nlogin $APTSERVER_USER\npassword $APTSERVER_PASSWORD" >> /etc/apt/auth.conf.d/clearbot.conf
          sudo add-apt-repository 'deb https://aptserver.clearbot.dev focal main'
        working-directory: ./cv_bridge
      - name: Install dependencies
        run: |
          sudo apt -y update
          sudo apt install -y dh-make fakeroot opencv-libs opencv-main opencv-python opencv-dev libboost-all-dev
        working-directory: ./cv_bridge
      - name: fakeroot
        run: fakeroot debian/rules binary
        working-directory: ./cv_bridge
      - name: Debian file
        id: deb-file-name
        run: |
          cd .. && echo DEB_FILE="$(pwd)/$(find . -name "ros-foxy-clearbot-cv-bridge*.deb" | sed -r 's/^.{2}//')" >> "$GITHUB_OUTPUT"
        working-directory: ./cv_bridge
      - name: Upload to aptserver
        env:
          APTSERVER_USER: ${{ secrets.APTSERVER_USER }}
          APTSERVER_PASSWORD: ${{ secrets.APTSERVER_PASSWORD }}
          FILENAME: ${{ steps.deb-file-name.outputs.DEB_FILE }}
        run: cd .. && curl -X POST -u $APTSERVER_USER:$APTSERVER_PASSWORD -F file=@$FILENAME https://aptserver.clearbot.dev/api/files/clearbot-cv-bridge
